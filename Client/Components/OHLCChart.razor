@using Stocks.Shared.Models

<PlotlyChart Id="OHLCChart" Config="config" Layout="layout" Data="data" @ref="chart" />

@code {
    [Parameter]
    public List<TickerDataPoint> TickerTimeSeries { get; set; }
    List<ITrace> data = new List<ITrace>
    {
        new Ohlc
        {
            Open = new List<object>(),
            High = new List<object>(),
            Low = new List<object>(),
            Close = new List<object>(),
            X = new List<object>(),
            Decreasing = new Plotly.Blazor.Traces.OhlcLib.Decreasing
            {
                Line = new Plotly.Blazor.Traces.OhlcLib.DecreasingLib.Line
                {
                    Color = "#FF0000"
                }
            },
            Increasing = new Plotly.Blazor.Traces.OhlcLib.Increasing
            {
                Line = new Plotly.Blazor.Traces.OhlcLib.IncreasingLib.Line
                {
                    Color = "#00FF00"
                }
            },
            XAxis = "Date",
            YAxis = ""
        }
    };
    PlotlyChart chart;
    Config config = new Config
    {
        Responsive = true
    };
    Layout layout = new Layout
    {
        DragMode = Plotly.Blazor.LayoutLib.DragModeEnum.Zoom,
        Margin = new Plotly.Blazor.LayoutLib.Margin
        {
            R = 10,
            T = 25,
            B = 40,
            L = 60
        },
        ShowLegend = true,
        Title = new Plotly.Blazor.LayoutLib.Title
        {
            Text = "OHLC"
        },
        XAxis = new List<Plotly.Blazor.LayoutLib.XAxis>
    {
            new Plotly.Blazor.LayoutLib.XAxis
            {
                AutoRange = Plotly.Blazor.LayoutLib.XAxisLib.AutoRangeEnum.True,
                Domain = new List<object> {0, 1},
                Range = new List<object> {"2017-01-03 12:00", "2017-02-15 12:00"},
                RangeSlider = new Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider
                {
                    Range = new object[] {"2017-01-03 12:00", "2017-02-15 12:00"}
                },
                Title = new Plotly.Blazor.LayoutLib.XAxisLib.Title
                {
                    Text = "Date"
                },
                Type = Plotly.Blazor.LayoutLib.XAxisLib.TypeEnum.Date
            }
        },
        YAxis = new List<Plotly.Blazor.LayoutLib.YAxis>
        {
            new Plotly.Blazor.LayoutLib.YAxis
            {
                AutoRange = Plotly.Blazor.LayoutLib.YAxisLib.AutoRangeEnum.True,
                Domain = new List<object> {0, 1},
                //Range = new List<object> {0, 1000},
                Type = Plotly.Blazor.LayoutLib.YAxisLib.TypeEnum.Linear
            }
        }
    };

    protected override async Task OnParametersSetAsync()
    {
        if (TickerTimeSeries == null)
        {
            return;
        }

        var dates = TickerTimeSeries.Select(k => k.Date).ToList();
        var open = TickerTimeSeries.Select(k => k.Open).Cast<object>().ToList();
        var close = TickerTimeSeries.Select(k => k.Close).Cast<object>().ToList();
        var high = TickerTimeSeries.Select(k => k.High).Cast<object>().ToList();
        var low = TickerTimeSeries.Select(k => k.Low).Cast<object>().ToList();
        var x = dates.Select(v => v).Cast<object>().ToList();
        if (x.Count == 0)
        {
            dates.Add(new DateTime(2000, 1, 1));
        }
        if (chart.Data.FirstOrDefault() is not Ohlc ohlc) return;
        var xaxis = chart.Layout.XAxis.FirstOrDefault();
        var start_date = dates.Min().ToString();
        var end_date = dates.Max().ToString();
        xaxis.Range = new List<object> { start_date, end_date };
        xaxis.RangeSlider = new Plotly.Blazor.LayoutLib.XAxisLib.RangeSlider
        {
            Range = xaxis.Range
        };

        ohlc.Open = open;
        ohlc.Close = close;
        ohlc.High = high;
        ohlc.Low = low;
        ohlc.X = x;
        await chart.React();
    }
}
