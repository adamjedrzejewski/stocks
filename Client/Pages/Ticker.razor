@page "/ticker/{tickerName}"
@page "/ticker/{tickerName}/{series}"
@page "/ticker/{tickerName}/{series}/adjusted"
@inject NavigationManager _navigation
@inject HttpClient _httpClient
@using Stocks.Shared.Models

@if (_seriesOk)
{
    <h3>Ticker: @TickerName
    @foreach (var (name, redirect, id) in redirectButtons)
    {
        <button id="@id" style="margin: 5px 10px 5px 10px" class="btn btn-info" @onclick="() => ButtonRedirect(redirect)">@name</button>
    }
    </h3>
    <Stocks.Client.Components.OHLCChart TickerTimeSeries="TickerTimeSeries" />
    <Stocks.Client.Components.VolumeChart TickerTimeSeries="TickerTimeSeries" />
}
else
{
    <h2>Invalid time series</h2>
}


@code {

    [Parameter]
    public string TickerName { get; set; }

    [Parameter]
    public string Series { get; set; }

    public List<TickerDataPoint> TickerTimeSeries { get; set; }

    private bool _seriesOk = false;
    private List<string> _correctSeries = new List<string> { "daily", "weekly", "monthly" };
    private List<(string name, string redirect, string id)> redirectButtons = new List<(string, string, string)>
    {
        ("Daily", "daily", "redirect-daily"),
        ("Daily Adjusted", "daily/adjusted", "redirect-daily-adjusted"),
        ("Weekly", "weekly", "redirect-weekly"),
        ("Weekly Adjusted", "weekly/adjusted", "redirect-weekly-adjusted"),
        ("Monthly", "monthly", "redirect-monthly"),
        ("Monthly Adjusted", "monthly/adjusted", "redirect-monthly-adjusted")
    };

    protected override async Task OnInitializedAsync()
    {
        Series = Series?.ToLower();
        _seriesOk = _correctSeries.Contains(Series);

        if (_seriesOk)
        {
            var adjusted = _navigation.Uri.ToLower().Contains("adjusted") ? "/adjusted" : "";
            var uri = $"/api/ticker/{TickerName}/{Series}{adjusted}";
            var tickerInfo = await _httpClient.GetFromJsonAsync<TickerTimeSeries>(uri);
            TickerTimeSeries = tickerInfo.TimeSeries.OrderBy(t => t.Date).ToList();
        }
    }

    private void ButtonRedirect(string path)
    {
        _navigation.NavigateTo($"ticker/{TickerName}/{path}", true);
    }

}
